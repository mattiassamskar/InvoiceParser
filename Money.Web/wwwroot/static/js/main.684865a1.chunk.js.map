{"version":3,"sources":["HeaderComponent.tsx","ExpensesContainer.tsx","api.ts","SearchContainer.tsx","expensTransformers.ts","ChartContainer.tsx","MainContainer.tsx","EditContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","react_default","a","createElement","className","Link","to","icon","type","ExpensesContainer","props","columns","title","dataIndex","key","render","date","format","sorter","b","diff","amount","style","display","justifyContent","Intl","NumberFormat","minimumFractionDigits","row","col","span","table","dataSource","expenses","rowKey","getExpenses","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","filter","url","result","wrap","_context","prev","next","fetch","sent","json","forEach","expense","moment","utc","abrupt","t0","stop","this","_x","apply","arguments","api","deleteExpense","_ref2","_callee2","id","_context2","method","_x2","SearchContainer","_useState","useState","_useState2","slicedToArray","setFilter","_useState3","_useState4","isLoading","setIsLoading","fetchExpenses","setExpenses","justify","xs","md","input","placeholder","value","onChange","text","target","es_button","loading","onClick","transformToEditExpenses","map","description","askIfDuplicate","notDuplicate","findDuplicates","e","isSame","length","ChartContainer","expensesByMonth","reduce","month","parseInt","options","chart","marginTop","animation","legend","enabled","credits","exporting","tooltip","formatter","currency","y","x","xAxis","categories","toConsumableArray","keys","yAxis","undefined","labels","series","data","values","highcharts_react_min_default","highcharts","Highcharts","MainContainer","SearchContainer_SearchContainer","ChartContainer_ChartContainer","ExpensesContainer_ExpensesContainer","EditContainer","editExpenses","setEditExpenses","useEffect","editExpense","spin","size","App","locale","BrowserRouter","HeaderComponent_Header","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.684865a1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./header.css\";\n\nexport const Header = () => (\n  <div className=\"header-container\">\n    <Link to=\"/\" className=\"header-homelink\">\n      <div>\n        <Icon type=\"home\" /> Ekonomi\n      </div>\n    </Link>\n    <Link to=\"/edit\" className=\"header-editlink\">\n      Ã„ndra\n    </Link>\n  </div>\n);\n","import React from \"react\";\nimport { Expense } from \"./MainContainer\";\nimport { Table, Row, Col } from \"antd\";\nimport moment from \"moment\";\n\ninterface Props {\n  expenses: Expense[];\n}\n\nexport const ExpensesContainer = (props: Props) => {\n  const columns = [\n    {\n      title: \"Datum\",\n      dataIndex: \"date\",\n      key: \"date\",\n      render: (date: moment.Moment) => <div>{date.format(\"YYYY-MM-DD\")}</div>,\n      sorter: (a: Expense, b: Expense) => a.date.diff(b.date)\n    },\n    {\n      title: \"Beskrivning\",\n      dataIndex: \"description\",\n      key: \"description\"\n    },\n    {\n      title: \"Belopp\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (amount: number) => (\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {Intl.NumberFormat(\"sv-se\", { minimumFractionDigits: 2 }).format(\n            amount\n          )}\n        </div>\n      ),\n      sorter: (a: Expense, b: Expense) => a.amount - b.amount\n    }\n  ];\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Table\n          dataSource={props.expenses}\n          columns={columns}\n          rowKey=\"id\"\n        />\n      </Col>\n    </Row>\n  );\n};\n","import moment from \"moment\";\nimport { Expense } from \"./MainContainer\";\n\nexport const getExpenses = async (filter?: string) => {\n  try {\n    const url = filter ? \"/expenses?filter=\" + filter : \"/expenses\";\n    const result = await fetch(url);\n    const expenses = (await result.json()) as Expense[];\n    expenses.forEach(expense => (expense.date = moment.utc(expense.date)));\n    return expenses;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const deleteExpense = async (id: string) => {\n  try {\n    await fetch(\"/expenses?id=\" + id, { method: \"DELETE\" });\n  } catch (error) {}\n};\n\nexport default {\n  getExpenses,\n  deleteExpense\n}\n","import React, { useState } from \"react\";\nimport { Input, Row, Col, Button } from \"antd\";\nimport { Expense } from \"./MainContainer\";\nimport { getExpenses } from \"./api\";\n\ninterface Props {\n  setExpenses: (expenses: Expense[]) => void;\n}\n\nexport const SearchContainer = (props: Props) => {\n  const [filter, setFilter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchExpenses = async () => {\n    setIsLoading(true);\n    const expenses = await getExpenses(filter);\n    props.setExpenses(expenses);\n    setIsLoading(false);\n  };\n\n  return (\n    <Row type=\"flex\" justify=\"center\">\n      <Col xs={16} md={10}>\n        <Input\n          placeholder=\"SÃ¶kord..\"\n          value={filter}\n          onChange={text => setFilter(text.target.value)}\n        />\n      </Col>\n      <Col>\n        <Button\n          icon=\"search\"\n          type=\"primary\"\n          loading={isLoading}\n          onClick={fetchExpenses}\n        >\n          SÃ¶k\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import { Expense } from \"./MainContainer\";\nimport { EditExpense } from \"./types\";\nimport moment from \"moment\";\n\nexport const transformToEditExpenses = (expenses: Expense[]): EditExpense[] => {\n  return expenses.map(expense => {\n    return {\n      id: expense.id,\n      date: moment.utc(expense.date),\n      description: expense.description,\n      amount: expense.amount,\n      askIfDuplicate:\n        expense.notDuplicate !== true && findDuplicates(expense, expenses)\n    } as EditExpense;\n  });\n};\n\nconst findDuplicates = (expense: Expense, expenses: Expense[]): boolean =>\n  expenses.filter(\n    e =>\n      e.amount === expense.amount &&\n      e.description === expense.description &&\n      e.date.isSame(expense.date)\n  ).length > 1;\n\nexport const sumExpensesByMonth = (expenses: Expense[]) => {\n  return expenses.reduce((a: { [key: number]: number }, b) => {\n    const month = parseInt(b.date.format(\"YYYYMM\"));\n    a[month] = a[month] || 0;\n    a[month] = a[month] + b.amount;\n    return a;\n  }, []);\n};\n","import React from \"react\";\nimport { Row } from \"antd\";\nimport { Expense } from \"./MainContainer\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport moment from \"moment\";\nimport { sumExpensesByMonth } from \"./expensTransformers\";\n\ninterface Props {\n  expenses: Expense[];\n}\n\nexport const ChartContainer = (props: Props) => {\n  const expensesByMonth = sumExpensesByMonth(props.expenses);\n\n  const categories = [...Object.keys(expensesByMonth)].map(key =>\n    moment.utc(key + \"01\").format(\"MMM YYYY\")\n  );\n  const data = [...Object.values(expensesByMonth)].map(value => {\n    return { y: value };\n  });\n\n  const options: Highcharts.Options = {\n    chart: {\n      type: \"column\",\n      marginTop: 40,\n      animation: false\n    },\n    title: { text: \"\" },\n    legend: { enabled: false },\n    credits: { enabled: false },\n    exporting: { enabled: false },\n    tooltip: {\n      formatter: function() {\n        const amount = Intl.NumberFormat(\"sv-se\", {\n          style: \"currency\",\n          currency: \"SEK\",\n        }).format(this.y);\n        return this.x + \" \" + \"<b>\" + amount + \"</b>\";\n      }\n    },\n    xAxis: {\n      type: \"category\",\n      categories\n    },\n    yAxis: {\n      title: undefined,\n      labels: {\n        format: \"{value} kr\"\n      }\n    },\n    series: [\n      {\n        type: \"column\",\n        data\n      }\n    ]\n  };\n\n  return (\n    <Row>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </Row>\n  );\n};\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { ExpensesContainer } from \"./ExpensesContainer\";\nimport { SearchContainer } from \"./SearchContainer\";\nimport { ChartContainer } from \"./ChartContainer\";\n\nexport interface Expense {\n  id: string;\n  date: moment.Moment;\n  description: string;\n  amount: number;\n  notDuplicate: boolean | null;\n}\n\nexport const MainContainer = () => {\n  const [expenses, setExpenses] = useState<Array<Expense>>([]);\n\n  return (\n    <div>\n      <SearchContainer setExpenses={setExpenses} />\n      <ChartContainer expenses={expenses} />\n      <ExpensesContainer expenses={expenses} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Row, Col, Button, Spin } from \"antd\";\nimport moment from \"moment\";\nimport api from \"./api\";\nimport { transformToEditExpenses } from \"./expensTransformers\";\nimport { EditExpense } from \"./types\";\nimport { ColumnProps } from \"antd/lib/table\";\n\nexport const EditContainer = () => {\n  const [editExpenses, setEditExpenses] = useState<Array<EditExpense>>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  const fetchExpenses = async () => {\n    setIsLoading(true);\n    const expenses = await api.getExpenses();\n    setEditExpenses(transformToEditExpenses(expenses));\n    setIsLoading(false);\n  };\n\n  const deleteExpense = async (id: string) => {\n    await api.deleteExpense(id);\n    fetchExpenses();\n  };\n\n  const columns: ColumnProps<EditExpense>[] = [\n    {\n      title: \"Datum\",\n      dataIndex: \"date\",\n      key: \"date\",\n      render: (date: moment.Moment) => <div>{date.format(\"YYYY-MM-DD\")}</div>,\n      sorter: (a: EditExpense, b: EditExpense) => a.date.diff(b.date)\n    },\n    {\n      title: \"Beskrivning\",\n      dataIndex: \"description\",\n      key: \"description\"\n    },\n    {\n      title: \"Belopp\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      render: (amount: number) => (\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {Intl.NumberFormat(\"sv-se\", { minimumFractionDigits: 2 }).format(\n            amount\n          )}\n        </div>\n      ),\n      sorter: (a: EditExpense, b: EditExpense) => a.amount - b.amount\n    },\n    {\n      title: \"Dublett\",\n      dataIndex: \"askIfDuplicate\",\n      key: \"askIfDuplicate\",\n      render: (askIfDuplicate: boolean, editExpense: EditExpense) => {\n        return askIfDuplicate === true ? (\n          <Button onClick={() => deleteExpense(editExpense.id)}>Ta bort</Button>\n        ) : (\n          undefined\n        );\n      },\n      sorter: (a: EditExpense, b: EditExpense) => (a.askIfDuplicate ? 1 : -1)\n    }\n  ];\n\n  return (\n    <Row>\n      <Col span={24}>\n        {isLoading ? (\n          <Spin size=\"large\" />\n        ) : (\n          <Table dataSource={editExpenses} columns={columns} rowKey=\"id\"/>\n        )}\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Header } from \"./HeaderComponent\";\nimport { MainContainer } from \"./MainContainer\";\nimport { EditContainer } from \"./EditContainer\";\nimport moment from \"moment\";\nimport \"moment/locale/sv\";\n\nconst App = () => {\n  moment.locale(\"sv\");\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Row>\n          <Col xs={0} md={2} />\n          <Col xs={24} md={20}>\n            <Header />\n            <Route path=\"/\" exact component={MainContainer} />\n            <Route path=\"/edit\" component={EditContainer} />\n          </Col>\n          <Col xs={0} md={2} />\n        </Row>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}